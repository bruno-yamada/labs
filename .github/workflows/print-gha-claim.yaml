name: Print GHA claim (for oidc)

# # Example output:
# {
#   "jti": "988764ef-0632-4385-97d2-4e3593e6fbdf",
#   "sub": "repo:bruno-yamada/labs:ref:refs/heads/master",
#   "aud": "https://github.com/bruno-yamada",
#   "ref": "refs/heads/master",
#   "sha": "2ab8064a846b3ce4bb3165dc92f561bfe8842c24",
#   "repository": "bruno-yamada/labs",
#   "repository_owner": "bruno-yamada",
#   "repository_owner_id": "8508500",
#   "run_id": "3147092640",
#   "run_number": "6",
#   "run_attempt": "1",
#   "repository_visibility": "public",
#   "repository_id": "511714419",
#   "actor_id": "8508500",
#   "actor": "bruno-yamada",
#   "workflow": "Print GHA claim (oidc)",
#   "head_ref": "",
#   "base_ref": "",
#   "event_name": "push",
#   "ref_type": "branch",
#   "job_workflow_ref": "bruno-yamada/labs/.github/workflows/print-gha-claim.yaml@refs/heads/master",
#   "iss": "https://token.actions.githubusercontent.com",
#   "nbf": 1664401044,
#   "exp": 1664401944,
#   "iat": 1664401644
# }
# more details about the claims:
# https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect#customizing-the-token-claims

permissions:
  id-token: write
on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  print_gha_claim:
    runs-on: ubuntu-latest
    #environment:
    # name: prod
    steps:
      - name: Print ACTIONS_ID_TOKEN_REQUEST_URL
        run: echo $ACTIONS_ID_TOKEN_REQUEST_URL
      - name: Print token payload
        run: |
          ID_TOKEN=$(curl -s \
            -H "Authorization: bearer ${ACTIONS_ID_TOKEN_REQUEST_TOKEN}" \
            -H "Accept: application/json; api-version=2.0" \
            -H "Content-Type: application/json" \
            -d "{}" "${ACTIONS_ID_TOKEN_REQUEST_URL}" \
              | jq -r '.value')
          PAYLOAD_RAW=$(echo -n "$ID_TOKEN" | cut -d '.' -f2)

          # throws error due to padding
          # echo -n "$PAYLOAD_RAW" | base64 -d

          # fixes padding error
          # ref: https://unix.stackexchange.com/questions/631501/base64-d-decodes-but-says-invalid-input
          PAYLOAD=$(echo "$PAYLOAD_RAW"==== | fold -w 4 | sed '$ d' | tr -d '\n' | base64 --decode)
          echo "$PAYLOAD" | jq

